[{"/home/aniket/projects/diaryapp/src/index.js":"1","/home/aniket/projects/diaryapp/src/Component/Header/index.js":"2","/home/aniket/projects/diaryapp/src/root.js":"3","/home/aniket/projects/diaryapp/src/theme.js":"4","/home/aniket/projects/diaryapp/src/Component/Header/header.styles.js":"5","/home/aniket/projects/diaryapp/src/views/dashboard/index.js":"6","/home/aniket/projects/diaryapp/src/firebase.js":"7","/home/aniket/projects/diaryapp/src/Component/Spinner/index.js":"8","/home/aniket/projects/diaryapp/src/views/dashboard/dashboard.styles.js":"9","/home/aniket/projects/diaryapp/src/Component/CreateNote/index.js":"10","/home/aniket/projects/diaryapp/src/Component/CreateNote/createNote.styles.js":"11","/home/aniket/projects/diaryapp/src/Component/NotesTable/index.js":"12","/home/aniket/projects/diaryapp/src/Component/NotesTable/notesTable.styles.js":"13","/home/aniket/projects/diaryapp/src/Component/EditNote/index.js":"14","/home/aniket/projects/diaryapp/src/Component/EditNote/editNote.styles.js":"15"},{"size":171,"mtime":1609261463460,"results":"16","hashOfConfig":"17"},{"size":1017,"mtime":1609439280970,"results":"18","hashOfConfig":"17"},{"size":1209,"mtime":1609341400052,"results":"19","hashOfConfig":"17"},{"size":551,"mtime":1609313668486,"results":"20","hashOfConfig":"17"},{"size":173,"mtime":1609254830047,"results":"21","hashOfConfig":"17"},{"size":3803,"mtime":1609497857597,"results":"22","hashOfConfig":"17"},{"size":531,"mtime":1609263401451,"results":"23","hashOfConfig":"17"},{"size":227,"mtime":1609265839756,"results":"24","hashOfConfig":"17"},{"size":735,"mtime":1609498021299,"results":"25","hashOfConfig":"17"},{"size":2355,"mtime":1609497922960,"results":"26","hashOfConfig":"17"},{"size":635,"mtime":1609494977530,"results":"27","hashOfConfig":"17"},{"size":6096,"mtime":1609482420619,"results":"28","hashOfConfig":"17"},{"size":162,"mtime":1609422241632,"results":"29","hashOfConfig":"17"},{"size":2202,"mtime":1609498021331,"results":"30","hashOfConfig":"17"},{"size":618,"mtime":1609498021331,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1w686y2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aniket/projects/diaryapp/src/index.js",[],["65","66"],"/home/aniket/projects/diaryapp/src/Component/Header/index.js",[],"/home/aniket/projects/diaryapp/src/root.js",[],"/home/aniket/projects/diaryapp/src/theme.js",[],"/home/aniket/projects/diaryapp/src/Component/Header/header.styles.js",[],["67","68"],"/home/aniket/projects/diaryapp/src/views/dashboard/index.js",["69"],"import { Button, SwipeableDrawer, withStyles } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport NotesTable from \"../../Component/NotesTable\";\nimport Spinner from \"../../Component/Spinner\";\nimport firebase from \"../../firebase\";\nimport styles from \"./dashboard.styles\";\nimport { Add } from \"@material-ui/icons\";\nimport CreateNote from \"../../Component/CreateNote\";\nimport moment from \"moment\";\nclass Dashboard extends Component {\n  state = {\n    notes: [],\n    allNotes: [],\n    loading: true,\n    createNoteModal: false,\n    startDate: \"\",\n    endDate: \"\",\n  };\n\n  componentDidMount() {\n    this.fetchNotes();\n  }\n\n  fetchNotes = async () => {\n    const data = await firebase\n      .firestore()\n      .collection(\"notes\")\n      .onSnapshot((q) => {\n        const items = [];\n        q.forEach((el) => {\n          items.push({ ...el.data().data, id: el.id });\n        });\n        this.setState({ allNotes: items, notes: items, loading: false });\n      });\n  };\n\n  handleCreate = async (data) => {\n    await firebase.firestore().collection(\"notes\").add({ data });\n    this.setState({ createNoteModal: false });\n  };\n\n  onDateChangeHandle = (e) => {\n    this.setState({ [e.target.name]: e.target.value }, () => {\n      if (this.state.startDate !== \"\" && this.state.endDate !== \"\") {\n        this.setFilter();\n      } else if (this.state.startDate === \"\" && this.state.endDate === \"\")\n        this.setState({ notes: this.state.allNotes });\n    });\n  };\n\n  setFilter = () => {\n    let { startDate, endDate, allNotes } = this.state;\n\n    if (moment(startDate).isAfter(endDate))\n      this.props.snackbar(\"Start Date should be smaller!\", \"error\");\n    else {\n      allNotes = allNotes.filter(\n        (el) =>\n          moment(startDate).isSameOrBefore(el.date, \"day\") &&\n          moment(endDate).isSameOrAfter(el.date, \"day\")\n      );\n      this.setState({ notes: allNotes, startDate, endDate });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return this.state.loading ? (\n      <Spinner />\n    ) : (\n      <div style={{ padding: 70 }}>\n        <div style={{ marginBottom: 20 }}>\n          <Button\n            style={{\n              ...styles.createButt,\n              backgroundColor: \"#7f7fff\",\n              display: \"inline\",\n            }}\n            startIcon={<Add />}\n            variant=\"contained\"\n            onClick={() => this.setState({ createNoteModal: true })}\n          >\n            Create Note\n          </Button>\n          <div style={styles.filterBox}>\n            <span style={styles.dateLabel}>Start Date:</span>{\" \"}\n            <input\n              style={styles.dateBox}\n              type=\"date\"\n              name=\"startDate\"\n              value={this.state.startDate}\n              onChange={this.onDateChangeHandle}\n            />\n            <span style={styles.verticalLine}></span>\n            <span style={styles.dateLabel}> End Date:</span>{\" \"}\n            <input\n              style={styles.dateBox}\n              value={this.state.endDate}\n              type=\"date\"\n              name=\"endDate\"\n              onChange={this.onDateChangeHandle}\n            />\n          </div>\n        </div>\n        <NotesTable notes={this.state.notes} snackbar={this.props.snackbar} />\n        <SwipeableDrawer\n          anchor=\"top\"\n          onClose={() =>\n            this.setState({\n              createNoteModal: !this.state.createNoteModal,\n            })\n          }\n          open={this.state.createNoteModal}\n          classes={{ paper: classes.modal }}\n        >\n          <CreateNote\n            handleCreate={(data) => this.handleCreate(data)}\n            closeModal={() => this.setState({ createNoteModal: false })}\n          />\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Dashboard);\n","/home/aniket/projects/diaryapp/src/firebase.js",[],"/home/aniket/projects/diaryapp/src/Component/Spinner/index.js",[],"/home/aniket/projects/diaryapp/src/views/dashboard/dashboard.styles.js",[],"/home/aniket/projects/diaryapp/src/Component/CreateNote/index.js",[],"/home/aniket/projects/diaryapp/src/Component/CreateNote/createNote.styles.js",[],"/home/aniket/projects/diaryapp/src/Component/NotesTable/index.js",[],"/home/aniket/projects/diaryapp/src/Component/NotesTable/notesTable.styles.js",[],"/home/aniket/projects/diaryapp/src/Component/EditNote/index.js",[],"/home/aniket/projects/diaryapp/src/Component/EditNote/editNote.styles.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":25,"column":11,"nodeType":"76","messageId":"77","endLine":25,"endColumn":15},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]